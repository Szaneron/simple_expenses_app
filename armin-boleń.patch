diff --git a/TODO.md b/TODO.md
index a98e968..30d303b 100644
--- a/TODO.md
+++ b/TODO.md
@@ -1,10 +1,10 @@
 1. SETUP PROJECT
 
    Requirements:
-   - python >= 3.10
-   - django >= 4
-   - sqlite
-   
+    - python >= 3.10
+    - django >= 4
+    - sqlite
+
    python manage.py migrate
    python manage.py loaddata fixtures.json
 
@@ -12,16 +12,16 @@
 3. Create new branch in format `firstName-lastName`.
 4. TASKS
 
-   1. In `expenses.ExpenseList` allow searching by date (from and/or to).
-   2. In `expenses.ExpenseList` allow searching by multiple categories.
-   3. In `expenses.ExpenseList` add sorting by category or date (ascending and descending)
-   4. In `expenses.ExpenseList` add total amount spent.
-   5. In `expenses.ExpenseList` add table with total summary per year-month.
-   6. Add update view for `expenses.Category`.
-   7. Add number of expenses per category row in category list.
+    1. In `expenses.ExpenseList` allow searching by date (from and/or to).
+    2. In `expenses.ExpenseList` allow searching by multiple categories.
+    3. In `expenses.ExpenseList` add sorting by category or date (ascending and descending)
+    4. In `expenses.ExpenseList` add total amount spent.
+    5. In `expenses.ExpenseList` add table with total summary per year-month.
+    6. Add update view for `expenses.Category`.
+    7. Add number of expenses per category row in category list.
 
 5. By the end of seventh calendar day (even if it is incomplete), please:
-   1. Commit all changes.
-   2. Create patch using git with filename in format `firstName-lastName.patch`.
-   3. Make sure patch contains only source code you have added/changed.
-   4. Send us only patch file.
+    1. Commit all changes.
+    2. Create patch using git with filename in format `firstName-lastName.patch`.
+    3. Make sure patch contains only source code you have added/changed.
+    4. Send us only patch file.
diff --git a/expenses/forms.py b/expenses/forms.py
index 0ad77c0..27a6a7c 100644
--- a/expenses/forms.py
+++ b/expenses/forms.py
@@ -1,12 +1,30 @@
 from django import forms
-from .models import Expense
+from .models import Expense, Category
 
 
 class ExpenseSearchForm(forms.ModelForm):
+    fromDate = forms.DateField(widget=forms.DateInput(attrs={'type': 'date'}))
+    toDate = forms.DateField(widget=forms.DateInput(attrs={'type': 'date'}))
+    categories = forms.ModelMultipleChoiceField(
+        queryset=Category.objects.all(),
+        widget=forms.CheckboxSelectMultiple,
+        required=False,
+    )
+
+    CHOICES = (
+        ('asc', 'Date (oldest first)'),
+        ('desc', 'Date (newest first)'),
+    )
+    sortByDate = forms.ChoiceField(choices=CHOICES, widget=forms.RadioSelect)
+
     class Meta:
         model = Expense
-        fields = ('name',)
+        fields = ('name', 'fromDate', 'toDate', 'categories', 'sortByDate')
 
     def __init__(self, *args, **kwargs):
         super().__init__(*args, **kwargs)
         self.fields['name'].required = False
+        self.fields['fromDate'].required = False
+        self.fields['toDate'].required = False
+        self.fields['categories'].required = False
+        self.fields['sortByDate'].required = False
diff --git a/expenses/templates/expenses/category_list.html b/expenses/templates/expenses/category_list.html
index 3fa249e..954595a 100644
--- a/expenses/templates/expenses/category_list.html
+++ b/expenses/templates/expenses/category_list.html
@@ -1,26 +1,32 @@
 {% extends "base.html" %}
 
 {% block content %}
-<a href="{% url 'expenses:category-create' %}">add</a>
+    <a href="{% url 'expenses:category-create' %}">add</a>
 
-<table border="1">
-	<thead>
-		<tr>
-			<th>name</th>
-			<th>actions</th>
-		</tr>
-	</thead>
-	<tbody>
-		{% for obj in object_list %}
-		<tr>
-			<td>
-				{{obj.name}}
-			</td>
-			<td>
-				<a href="{% url 'expenses:category-delete' obj.id %}">delete</a>
-			</td>
-		</tr>
-		{% endfor %}
-	</tbody>
-</table>
+    <table border="1">
+        <thead>
+        <tr>
+            <th>name</th>
+            <th>number of expenses</th>
+            <th>actions</th>
+        </tr>
+        </thead>
+        <tbody>
+        {% for obj in object_list %}
+            <tr>
+                <td>
+                    {{ obj.name }}
+                </td>
+                <td>
+                    {{ obj.num_expenses }}
+                </td>
+                <td>
+                    <a href="{% url 'expenses:category-edit' obj.id %}">edit</a>
+                    <a href="{% url 'expenses:category-delete' obj.id %}">delete</a>
+                </td>
+            </tr>
+        {% endfor %}
+        </tbody>
+    </table>
+    {% include "_pagination.html" %}
 {% endblock %}
diff --git a/expenses/templates/expenses/expense_list.html b/expenses/templates/expenses/expense_list.html
index d15d582..aec857a 100644
--- a/expenses/templates/expenses/expense_list.html
+++ b/expenses/templates/expenses/expense_list.html
@@ -2,58 +2,91 @@
 
 {% block content %}
 
-<a href="{% url 'expenses:expense-create' %}">add</a>
+    <a href="{% url 'expenses:expense-create' %}">add</a>
+    <hr>
+    <table border="1">
+        <caption>Seach filter</caption>
+        <tr>
+            <td>
+                <form method="get" action="">
+                    {{ form.as_p }}
+                    <button type="submit">search</button>
+                </form>
+            </td>
+        </tr>
 
-<form method="get" action="">
-  {{form.as_p}}
-  <button type="submit">search</button>
-</form>
-<br>
-<table border="1">
-	<caption>Expenses</caption>
-	<thead>
-	  <tr>
-		<th>no.</th>
-		<th>category</th>
-		<th>name</th>
-		<th>amount</th>
-		<th>date</th>
-		<th>actions</th>
-	  </tr>
-	</thead>
-	<tbody>
+    </table>
 
-	{% for obj in object_list %}
-	  <tr>
-		<td>{{ page_obj.start_index|add:forloop.counter0 }}.</td>
-		<td>{{ obj.category|default:"-" }}</td>
-		<td>{{ obj.name|default:"-" }}</td>
-		<td>{{ obj.amount|floatformat:2 }}</td>
-		<td>{{obj.date}}</td>
-		<td>
-		  <a href="{% url 'expenses:expense-edit' obj.id %}">edit</a>
-		  <a href="{% url 'expenses:expense-delete' obj.id %}">delete</a>
-		</td>
-	  </tr>
-	  {% empty %}
-	  <tr>
-		<td colspan="5">no items</td>
-	  </tr>
-	{% endfor %}
-	</tbody>
-</table>
+    <br>
+    <hr>
 
-{% include "_pagination.html" %}
-<hr>
-<table border="1">
-  <caption>Summary per category</caption>
-  <tr>
-    {% for category, total in summary_per_category.items %}
-	<tr>
-		<td>{{category}}:</td>
-		<td>{{total|floatformat:2}}</td>
-	</tr>
-	{% endfor %}
-  </tr>
-</table>
+    <table border="1">
+        <caption>Expenses</caption>
+        <thead>
+        <tr>
+            <th>no.</th>
+            <th>category</th>
+            <th>name</th>
+            <th>amount</th>
+            <th>date</th>
+            <th>actions</th>
+        </tr>
+        </thead>
+        <tbody>
+
+        {% for obj in object_list %}
+            <tr>
+                <td>{{ page_obj.start_index|add:forloop.counter0 }}.</td>
+                <td>{{ obj.category|default:"-" }}</td>
+                <td>{{ obj.name|default:"-" }}</td>
+                <td>{{ obj.amount|floatformat:2 }}</td>
+                <td>{{ obj.date }}</td>
+                <td>
+                    <a href="{% url 'expenses:expense-edit' obj.id %}">edit</a>
+                    <a href="{% url 'expenses:expense-delete' obj.id %}">delete</a>
+                </td>
+            </tr>
+        {% empty %}
+            <tr>
+                <td colspan="5">no items</td>
+            </tr>
+        {% endfor %}
+        </tbody>
+    </table>
+
+    {% include "_pagination.html" %}
+    <hr>
+    <table border="1">
+        <caption>Summary per category</caption>
+        <tr>
+            {% for category, total in summary_per_category.items %}
+                <tr>
+                    <td>{{ category }}:</td>
+                    <td>{{ total|floatformat:2 }}</td>
+                </tr>
+            {% endfor %}
+        </tr>
+    </table>
+    <hr>
+    <table border="1">
+        <caption>Total amount spent</caption>
+        <tr>
+            <td>{{ totalAmountSpent }}</td>
+        </tr>
+    </table>
+    <br>
+    <hr>
+    <table border="1-">
+        <caption>Summary per year-month</caption>
+        <tr>
+            <th>Year-Month</th>
+            <th>Total Spent</th>
+        </tr>
+        {% for expense in expense_summary %}
+            <tr>
+                <td>{{ expense.month|date:"Y-m" }}</td>
+                <td>{{ expense.total_spent }}</td>
+            </tr>
+        {% endfor %}
+    </table>
 {% endblock %}
diff --git a/expenses/urls.py b/expenses/urls.py
index 4ae9779..a1d77be 100644
--- a/expenses/urls.py
+++ b/expenses/urls.py
@@ -3,32 +3,31 @@ from django.urls import path, reverse_lazy
 from .models import Expense, Category
 from .views import ExpenseListView, CategoryListView
 
-
 urlpatterns = [
     path('expense/list/',
          ExpenseListView.as_view(),
          name='expense-list'),
     path('expense/create/',
          CreateView.as_view(
-            model=Expense,
-            fields='__all__',
-            success_url=reverse_lazy('expenses:expense-list'),
-            template_name='generic_update.html'
+             model=Expense,
+             fields='__all__',
+             success_url=reverse_lazy('expenses:expense-list'),
+             template_name='generic_update.html'
          ),
          name='expense-create'),
     path('expense/<int:pk>/edit/',
          UpdateView.as_view(
-            model=Expense,
-            fields='__all__',
-            success_url=reverse_lazy('expenses:expense-list'),
-            template_name='generic_update.html'
+             model=Expense,
+             fields='__all__',
+             success_url=reverse_lazy('expenses:expense-list'),
+             template_name='generic_update.html'
          ),
          name='expense-edit'),
     path('expense/<int:pk>/delete/',
          DeleteView.as_view(
-            model=Expense,
-            success_url=reverse_lazy('expenses:expense-list'),
-            template_name='generic_delete.html'
+             model=Expense,
+             success_url=reverse_lazy('expenses:expense-list'),
+             template_name='generic_delete.html'
          ),
          name='expense-delete'),
 
@@ -37,17 +36,25 @@ urlpatterns = [
          name='category-list'),
     path('category/create/',
          CreateView.as_view(
-            model=Category,
-            fields='__all__',
-            success_url=reverse_lazy('expenses:category-list'),
-            template_name='generic_update.html'
+             model=Category,
+             fields='__all__',
+             success_url=reverse_lazy('expenses:category-list'),
+             template_name='generic_update.html'
          ),
          name='category-create'),
     path('category/<int:pk>/delete/',
          DeleteView.as_view(
-            model=Category,
-            success_url=reverse_lazy('expenses:category-list'),
-            template_name='generic_delete.html'
+             model=Category,
+             success_url=reverse_lazy('expenses:category-list'),
+             template_name='generic_delete.html'
          ),
          name='category-delete'),
+    path('category/<int:pk>/edit/',
+         UpdateView.as_view(
+             model=Category,
+             fields='__all__',
+             success_url=reverse_lazy('expenses:category-list'),
+             template_name='generic_update.html'
+         ),
+         name='category-edit'),
 ]
diff --git a/expenses/views.py b/expenses/views.py
index aefaae9..40cbb81 100644
--- a/expenses/views.py
+++ b/expenses/views.py
@@ -1,3 +1,5 @@
+from django.db.models import Sum, Count
+from django.db.models.functions import TruncMonth
 from django.views.generic.list import ListView
 
 from .forms import ExpenseSearchForm
@@ -14,17 +16,47 @@ class ExpenseListView(ListView):
 
         form = ExpenseSearchForm(self.request.GET)
         if form.is_valid():
-            name = form.cleaned_data.get('name', '').strip()
+            name = form.cleaned_data.get('name')
+            fromDate = form.cleaned_data.get('fromDate')
+            toDate = form.cleaned_data.get('toDate')
+            categories = form.cleaned_data.get('categories')
+            sortByDate = form.cleaned_data.get('sortByDate')
+
             if name:
                 queryset = queryset.filter(name__icontains=name)
+            if fromDate:
+                queryset = queryset.filter(date__gte=fromDate)
+            if toDate:
+                queryset = queryset.filter(date__lte=toDate)
+            if categories:
+                queryset = queryset.filter(category__in=categories)
+            if sortByDate == 'asc':
+                queryset = queryset.order_by('date')
+            if sortByDate == 'desc':
+                queryset = queryset.order_by('-date')
+
+        totalAmountSpent = round(queryset.aggregate(total=Sum('amount'))['total'] or 0, 2)
+
+        expense_summary = queryset.annotate(month=TruncMonth('date')).values('month').annotate(
+            total_spent=Sum('amount'))
+
+        for expense in expense_summary:
+            expense['total_spent'] = round(expense['total_spent'], 2)
 
         return super().get_context_data(
             form=form,
             object_list=queryset,
             summary_per_category=summary_per_category(queryset),
+            totalAmountSpent=totalAmountSpent,
+            expense_summary=expense_summary,
             **kwargs)
 
+
 class CategoryListView(ListView):
     model = Category
     paginate_by = 5
 
+    def get_queryset(self):
+        queryset = super().get_queryset()
+        queryset = queryset.annotate(num_expenses=Count('expense'))
+        return queryset
diff --git a/project/settings.py b/project/settings.py
index 1722363..eecbe9f 100644
--- a/project/settings.py
+++ b/project/settings.py
@@ -15,7 +15,6 @@ from pathlib import Path
 # Build paths inside the project like this: BASE_DIR / 'subdir'.
 BASE_DIR = Path(__file__).resolve().parent.parent
 
-
 # Quick-start development settings - unsuitable for production
 # See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/
 
@@ -27,7 +26,6 @@ DEBUG = True
 
 ALLOWED_HOSTS = []
 
-
 # Application definition
 
 INSTALLED_APPS = [
@@ -64,13 +62,16 @@ TEMPLATES = [
                 'django.contrib.auth.context_processors.auth',
                 'django.contrib.messages.context_processors.messages',
             ],
+            'libraries': {
+                'my_tags': 'project.templatetags.my_tags',
+
+            }
         },
     },
 ]
 
 WSGI_APPLICATION = 'project.wsgi.application'
 
-
 # Database
 # https://docs.djangoproject.com/en/4.0/ref/settings/#databases
 
@@ -81,7 +82,6 @@ DATABASES = {
     }
 }
 
-
 # Password validation
 # https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators
 
@@ -100,7 +100,6 @@ AUTH_PASSWORD_VALIDATORS = [
     },
 ]
 
-
 # Internationalization
 # https://docs.djangoproject.com/en/4.0/topics/i18n/
 
@@ -112,7 +111,6 @@ USE_I18N = True
 
 USE_TZ = True
 
-
 # Static files (CSS, JavaScript, Images)
 # https://docs.djangoproject.com/en/4.0/howto/static-files/
 
diff --git a/project/templates/__init__.py b/project/templates/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/project/templates/_pagination.html b/project/templates/_pagination.html
index 6398e29..38f7047 100644
--- a/project/templates/_pagination.html
+++ b/project/templates/_pagination.html
@@ -1,17 +1,25 @@
 <div class="pagination">
     <span class="pagination__nav">
-        {% if page_obj.has_previous %}
-            <a href="?page=1">&laquo; first</a>
-            <a href="?page={{ page_obj.previous_page_number }}">previous</a>
-        {% endif %}
+        {% load my_tags %}
+
+        {% if is_paginated %}
+            {% if page_obj.has_previous %}
+                <a href="?{% param_replace page=1 %}">First</a>
+                {% if page_obj.previous_page_number != 1 %}
+                    <a href="?{% param_replace page=page_obj.previous_page_number %}">Previous</a>
+                {% endif %}
+            {% endif %}
+
+            Page {{ page_obj.number }} of {{ paginator.num_pages }}
 
-        <span class="current">
-            Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}.
-        </span>
+            {% if page_obj.has_next %}
+                {% if page_obj.next_page_number != paginator.num_pages %}
+                    <a href="?{% param_replace page=page_obj.next_page_number %}">Next</a>
+                {% endif %}
+                <a href="?{% param_replace page=paginator.num_pages %}">Last</a>
+            {% endif %}
 
-        {% if page_obj.has_next %}
-            <a href="?page={{ page_obj.next_page_number }}">next</a>
-            <a href="?page={{ page_obj.paginator.num_pages }}">last &raquo;</a>
+            <p>Objects {{ page_obj.start_index }}—{{ page_obj.end_index }}</p>
         {% endif %}
     </span>
 </div>
diff --git a/project/templatetags/__init__.py b/project/templatetags/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/project/templatetags/my_tags.py b/project/templatetags/my_tags.py
new file mode 100644
index 0000000..60808da
--- /dev/null
+++ b/project/templatetags/my_tags.py
@@ -0,0 +1,32 @@
+from django import template
+
+register = template.Library()
+
+
+@register.simple_tag(takes_context=True)
+def param_replace(context, **kwargs):
+    """
+    Return encoded URL parameters that are the same as the current
+    request's parameters, only with the specified GET parameters added or changed.
+
+    It also removes any empty parameters to keep things neat,
+    so you can remove a parm by setting it to ``""``.
+
+    For example, if you're on the page ``/things/?with_frosting=true&page=5``,
+    then
+
+    <a href="/things/?{% param_replace page=3 %}">Page 3</a>
+
+    would expand to
+
+    <a href="/things/?with_frosting=true&page=3">Page 3</a>
+
+    Based on
+    https://stackoverflow.com/questions/22734695/next-and-before-links-for-a-django-paginated-query/22735278#22735278
+    """
+    d = context['request'].GET.copy()
+    for k, v in kwargs.items():
+        d[k] = v
+    for k in [k for k, v in d.items() if not v]:
+        del d[k]
+    return d.urlencode()
